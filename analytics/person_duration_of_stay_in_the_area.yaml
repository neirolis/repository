uid: ""
path: ""
type: ""
name: Person duration of stay in the area
desc: Counting the duration a person has been in an area. Counting occurs with prolongation of the event. When a person leaves the area, the event with the duration of stay in the area is saved.
version: v0.0.1
scripts:
    - uuid: be9feed0-b91c-4c0e-8129-f9a7d67f6998
      name: count_duration_in_area
      enabled: false
      source: |-
        //@public type:string default:"wrk"
        var regionName = "wrk"

        //@public type:number default:5
        var minimumDuration = 5



        var regionDataResetDelay = 30
        var updateImageSequenceThresh = 20

        var numDetectsSequence = 3
        var numNoDetectsSequence = 3

        var globalRegionsData = {}

        function main(frame) {

            var regions = rtmip.GetCameraRegions(frame)
            var cameraRegions = []
            var frameStatusRegionNames = []

            for (var i in regions) {
                var region = regions[i]
                if (region.Name.indexOf(regionName) >= 0) {
                    cameraRegions.push(region)
                }
            }

            for (var j in cameraRegions) {
                var regionidx = "" + frame.Camera.ID + cameraRegions[j].ID
                if (!globalRegionsData[regionidx]) {
                    globalRegionsData[regionidx] = {
                        "numDetects": 0,
                        "numNoDetects": 0,
                        "name": cameraRegions[j].Name,
                        "startTime": undefined,
                        "event": undefined,
                        "lastDetect": 0,
                        "updateImageSequence": 0
                    }
                }

                var regionData = globalRegionsData[regionidx]

                var gotDetect = false
                for (var i in frame.Items) {
                    var item = frame.Items[i]
                    var p = item.BBox.Center()

                    if (cameraRegions[j].Contains(p[0], p[1])) {
                        item.State = "pass"
                        if (frameStatusRegionNames.indexOf(regionData["name"]) < 0) {
                            frame.Status += regionData["name"] + ": person in area<br>"
                            frameStatusRegionNames.push(regionData["name"])
                        }
                        gotDetect = true
                    }
                }

                if (gotDetect) {
                    regionData["numDetects"] = Math.min(regionData["numDetects"] + 1, numDetectsSequence)
                    regionData["numNoDetects"] = Math.max(0, regionData["numNoDetects"] - 1)
                    // check that last detect was not so long ago
                    if (frame.Time - regionData["lastDetect"] > regionDataResetDelay) {
                        // because last detect was long ago reset startTime and event
                        // this should prevent from creating events when camera restores stream
                        regionData["numDetects"] = 1
                        regionData["event"] = undefined
                        regionData["startTime"] = undefined
                    }
                    regionData["lastDetect"] = frame.Time
                } else {
                    regionData["numDetects"] = Math.max(0, regionData["numDetects"] - 1)
                    regionData["numNoDetects"] = Math.min(regionData["numNoDetects"] + 1, numNoDetectsSequence)
                }

                if (regionData["numNoDetects"] >= numNoDetectsSequence) {
                    // if we got more than <numNoDetectsSequence> noDetects in a row, reset event and startTimer
                    regionData["event"] = undefined
                    regionData["startTime"] = undefined
                    regionData["numDetects"] = 0
                } else if (regionData["numDetects"] >= numDetectsSequence) {
                    regionData["numNoDetects"] = 0
                    if (!regionData["startTime"]) {
                        regionData["startTime"] = frame.Time
                    }
                    var stayDuration = frame.Time - regionData["startTime"]
                    if (stayDuration >= minimumDuration) {
                        if (!regionData["event"]) {
                            frame.Save()
                            var event = rtmip.NewEmptyEvent(frame)
                            event.Items = frame.Items
                            event.Status = regionData["name"] + ": " + stayDuration
                            event.State = "pass"
                            event.Regions = [cameraRegions[j]]
                            rtmip.StoreEvent(event);
                            regionData["event"] = event
                            regionData["updateImageSequence"] = 0
                        } else {
                            regionData["updateImageSequence"] += 1
                            if (regionData["updateImageSequence"] >= updateImageSequenceThresh) {
                                frame.Save()
                                regionData["event"].Frame = frame.Filename
                                regionData["event"].Items = frame.Items
                                regionData["updateImageSequence"] = 0
                            }
                            regionData["event"].Status = regionData["name"] + ": " + stayDuration
                            regionData["event"].State = frame.State
                            regionData["event"].Texts = frame.Texts
                            regionData["event"].Regions = [cameraRegions[j]]
                            rtmip.ProlongEvent(regionData["event"], frame.Time)
                        }
                    }
                }

            }

            return true
        }
detectors:
    - uuid: 7b4ee37a-d535-4082-b72d-e8e5e364bdbd
      name: nrls_person-head-detector-torch
      desc: 10.0.40.21:65530
      enabled: true
      type: items
      addrs:
        - 127.0.0.1:65530
      mode: ""
      status:
        version: 1.5.0
        name: nrls_person-head-detector-torch
        type: detector
        path: /cvpredict
        output:
            types:
                - person
                - head
                - not_person
                - not_head
                - animal
            colors: []
            attributes: []
        image_types:
            - ALL
        width: 640
        height: 640
      cmd: ""
analytics:
    - uuid: a451293f-7b77-4a7d-a7b9-94a6d29c33df
      name: Person duration of stay in the area
      desc: Counting the duration a person has been in an area. Counting occurs with prolongation of the event. When a person leaves the area, the event with the duration of stay in the area is saved.
      enabled: true
      framerate: 3
      passhash: []
      links:
        detector-cckPGC1sD:
            "true":
                - filter-lp2aa1og
            "false": []
        filter-lp2aa1og:
            "true":
                - script-lmais31c
            "false": []
        script-lmais31c:
            "true":
                - result
            "false": []
        source:
            "true":
                - detector-cckPGC1sD
            "false": []
      blocks:
        detector-cckPGC1sD:
            id: detector-cckPGC1sD
            type: detector
            data:
                id: 26
            position:
                x: -420
                "y": 80
            uuid:
                - 7b4ee37a-d535-4082-b72d-e8e5e364bdbd
            active: true
        filter-lp2aa1og:
            id: filter-lp2aa1og
            type: filter
            data:
                percentprob: "71"
                types:
                    - person
            position:
                x: -200
                "y": 80
            active: true
        result:
            id: result
            type: result
            data: {}
            position:
                x: 240
                "y": 80
            active: true
        script-lmais31c:
            id: script-lmais31c
            type: script
            data:
                id: 31
                values:
                    workingTimeThresh: "5"
            position:
                x: 20
                "y": 80
            uuid:
                - be9feed0-b91c-4c0e-8129-f9a7d67f6998
            active: true
        source:
            id: source
            type: source
            data: {}
            position:
                x: -640
                "y": 80
            active: true
