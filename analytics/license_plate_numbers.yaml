uid: ""
path: ""
type: ""
name: License Plate Numbers
desc: Detects cars and other vehicles and their license plates, recognizes license plates. Creates an event for each unique license plate number.
version: v0.0.1
scripts:
    - uuid: 0b999798-e1d8-4aee-95f4-94c0a1555b45
      name: licensePlateNumbers
      enabled: false
      source: "// @public type:number default:120\nvar cacheCleanupPeriod = 120\n\nvar minLicensePlateProb = 0.75\n\nvar globalCache = {}\n\nfunction getCache(cameraID) {\n    var camCache = globalCache[cameraID]\n    if (!camCache) {\n        camCache = {}\n        globalCache[cameraID] = {}\n    }\n    return camCache\n}\n\nfunction createEvent(frame, item, cachedEvent) {\n    frame.Save()\n\n    if (cachedEvent != null) {\n        cachedEvent.Frame = frame.Filename\n        cachedEvent.Items = [item]\n        cachedEvent.Status = item.Text.Name\n        cachedEvent.Name = item.Name\n        rtmip.ProlongEvent(cachedEvent, frame.Time)\n        return cachedEvent\n    }\n\n    var event = rtmip.NewEvent(frame, item)\n    event.Status = item.Text.Name\n    rtmip.StoreEvent(event)\n\n    return event\n}\n\n\nfunction main(frame) {\n\n    var camCache = getCache(frame.Camera.ID)\n\n    for (var i in frame.Items) {\n        var item = frame.Items[i]\n        var model = item.Items.LookupItemByType(\"model\")\n\n        // ensure tracking is used\n        if (item.ID.indexOf(':') > -1) {\n            continue\n        }\n\n        var itemCache = camCache[item.ID]\n\n        if (!item.Text) {\n            continue\n        }\n\n        if (item.Text.Prob < minLicensePlateProb) {\n            if (itemCache) {\n                item.Text.Prob = itemCache[\"prob\"]\n                item.Text.Name = itemCache[\"name\"]\n            } else {\n                item.Text = null\n                continue\n            }\n        }\n        \n        // if no itemCache exists, create new cache and event\n        if (!itemCache) {\n            itemCache = {}\n            itemCache[\"prob\"] = item.Text.Prob\n            itemCache[\"name\"] = item.Text.Name\n            itemCache[\"text\"] = item.Text\n            if (model) {\n                itemCache[\"model\"] = model\n                itemCache[\"modelProb\"] = model.Prob\n            }\n            itemCache[\"event\"] = null\n            itemCache[\"event\"] = createEvent(frame, item, itemCache[\"event\"])\n            itemCache[\"lastDetect\"] = frame.Time\n            camCache[item.ID] = itemCache\n            continue\n        }\n\n        // if itemCache exists, check if current model.Prob or item.Text.Prob is higher than cached\n        // in case current Prob is higher than cached, update cache and existing event (ProlongEvent)\n        var modelUpdated = false\n        var licensePlateUpdated = false\n        \n        if (model && model.Prob > itemCache[\"modelProb\"]) {\n            itemCache[\"model\"] = model\n            itemCache[\"modelProb\"] = model.Prob\n            modelUpdated = true\n        }\n\n        if (item.Text.Prob > itemCache[\"prob\"]) {\n            itemCache[\"prob\"] = item.Text.Prob\n            itemCache[\"name\"] = item.Text.Name\n            itemCache[\"text\"] = item.Text\n            licensePlateUpdated = true\n        }\n\n        if (modelUpdated || licensePlateUpdated) {\n            itemCache[\"event\"] = createEvent(frame, item, itemCache[\"event\"])\n            itemCache[\"lastDetect\"] = frame.Time\n            camCache[item.ID] = itemCache\n        }\n\n    }\n    \n    // remove inactive cached objects\n    for (var itemID in camCache) {\n        if (frame.Time - camCache[itemID][\"lastDetect\"] >= cacheCleanupPeriod) {\n            delete camCache[itemID]\n        }\n    }\n    \n    return true\n}"
    - uuid: 7ea398e4-e3a2-434c-b15b-f421cdd71667
      name: addColor
      enabled: false
      source: |-
        function main(frame) {

            for (var i in frame.Items) {
                var item = frame.Items[i]
                if (item["colors"].name) {
                    var color = rtmip.NewItem("color", [])
                    color.Name = item["colors"].name
                    item.AddChildItem(color)
                }
            }

            return true
        }
detectors:
    - uuid: 92b6ef53-2fbe-4811-bfe3-347e9e9e8b70
      name: nrls_plate-server
      enabled: true
      type: license plate
      addrs:
        - 127.0.0.1:64301
      mode: ""
      status:
        version: "0.991"
        name: license plate
        type: detector
        path: /predict
        variables:
            - type: bool
              name: nodetect
              label: without car detection
              desc: Do not use transport detection analytic and search plate on whole image
              readonly: false
              required: false
              unit: ""
              system: false
              value: null
              default: false
              data: null
              class: ""
              width: 0
              selected: false
            - type: bool
              name: get_model
              label: Get car model
              desc: Recognize car manufacturer and model
              readonly: false
              required: false
              unit: ""
              system: false
              value: null
              default: true
              data: null
              class: ""
              width: 0
              selected: false
            - type: bool
              name: get_plate
              label: Get license plate
              desc: Detect and recognize license plate
              readonly: false
              required: false
              unit: ""
              system: false
              value: null
              default: true
              data: null
              class: ""
              width: 0
              selected: false
        output:
            types:
                - car
                - truck
                - bus
                - license_plate
            colors: []
            attributes: []
        image_types:
            - ALL
        width: -1
        height: -1
      params:
        get_model: true
        get_plate: true
      cmd: ""
analytics:
    - uuid: dc27c13f-6c87-467f-ad05-fd1224aca733
      name: License Plate Numbers
      desc: Detects cars and other vehicles and their license plates, recognizes license plates. Creates an event for each unique license plate number.
      enabled: true
      framerate: 10
      passhash: []
      links:
        colors-PP6zXN6hq:
            "true":
                - script-z61ZAae9E
            "false": []
        crop-lvaygi65:
            "true":
                - detector-lvausl4g
            "false": []
        detector-lvausl4g:
            "true":
                - filter-oj8ZeAkvb
            "false": []
        filter-oj8ZeAkvb:
            "true":
                - colors-PP6zXN6hq
            "false": []
        script-cPDj_q_AE:
            "true":
                - result
            "false": []
        script-z61ZAae9E:
            "true":
                - script-cPDj_q_AE
            "false": []
        source:
            "true":
                - crop-lvaygi65
            "false": []
      blocks:
        colors-PP6zXN6hq:
            id: colors-PP6zXN6hq
            type: colors
            data:
                type: colors
            position:
                x: 900
                "y": 100
            active: true
        crop-lvaygi65:
            id: crop-lvaygi65
            type: crop
            data:
                regionnames: []
            position:
                x: 240
                "y": 100
            active: true
        detector-lvausl4g:
            id: detector-lvausl4g
            type: detector
            data:
                id: 36
            position:
                x: 460
                "y": 100
            uuid:
                - 92b6ef53-2fbe-4811-bfe3-347e9e9e8b70
            active: true
        filter-oj8ZeAkvb:
            id: filter-oj8ZeAkvb
            type: filter
            data:
                percentprob: "40"
                type: filter
                types:
                    - bus
                    - car
                    - truck
            position:
                x: 680
                "y": 100
            active: true
        result:
            id: result
            type: result
            data:
                type: result
            position:
                x: 1560
                "y": 100
            active: true
        script-cPDj_q_AE:
            id: script-cPDj_q_AE
            type: script
            data:
                id: 39
                type: script
            position:
                x: 1340
                "y": 100
            uuid:
                - 0b999798-e1d8-4aee-95f4-94c0a1555b45
            active: true
        script-z61ZAae9E:
            id: script-z61ZAae9E
            type: script
            data:
                id: 38
                type: script
            position:
                x: 1120
                "y": 100
            uuid:
                - 7ea398e4-e3a2-434c-b15b-f421cdd71667
            active: true
        source:
            id: source
            type: source
            data:
                type: source
            position:
                x: 20
                "y": 100
            active: true
